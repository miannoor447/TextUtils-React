{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","Title","type","id","onClick","toggleMode","role","htmlFor","placeholder","TextForm","prop","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","toUpperCase","newText","toLowerCase","joinArray","split","reverse","join","length","defaultProps","aboutText","defaultpropTypes","headig","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bd0db30a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link}from'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.Title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label mx-1\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2 mx-2\"  type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes=\r\n{\r\n    Title: PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired,\r\n}\r\nNavbar.defaultProps=\r\n{\r\n    Title:\"Insert title here\",\r\n    aboutText:\"Insert about here\"\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(prop) {\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleUpclick=()=>\r\n    {\r\n        let newText=text;\r\n        setText(newText.toUpperCase());\r\n    }\r\n\r\n    const [text,setText]=useState(\"\")   \r\n    const handleLwClick=()=>\r\n    {\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleReverseClick=()=>\r\n    {\r\n    const arrayStrings = text.split(\"\");\r\n    const reverseArray = arrayStrings.reverse();\r\n    const joinArray = reverseArray.join(\"\");\r\n    setText(joinArray);\r\n    }\r\n  return (\r\n    \r\n    <>\r\n<div className=\"container  mb-3\" style={{color:prop.mode ==='dark'?'white':'black'}}>\r\n    <h1>{prop.heading}</h1>\r\n\r\n  <textarea className=\"form-control\" style={{backgroundColor:prop.mode ==='light'?'white':'#202124',color:prop.mode ==='dark'?'white':'black'}} value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n</div>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handleUpclick}>GET IN UPPERCASE</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handleLwClick}>get in lower case</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handleReverseClick}>Get in reverse</button>\r\n    \r\n\r\n    <div className=\"container my-3\"  style={{color:prop.mode ==='dark'?'white':'black'}}>\r\n        <h1>Your Text Summary</h1>  \r\n        <p>your text has {(text.split(\" \").length)-1} words And {text.length} Characters</p>\r\n        <p>It will take {0.008*((text.split(\" \").length)-1)} minutes to read your text</p>\r\n    </div>\r\n</>\r\n  )\r\n\r\n}\r\nTextForm.propTypes=\r\n{\r\n    headig: PropTypes.string,\r\n}\r\nTextForm.defaultpropTypes=\r\n{\r\n    headig:\"Heading\",\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\n// import {Routes,Route,} from \"react-router-dom\"; \nfunction App() {\nconst [mode,setMode]=useState('light')\nconst toggleMode=()=>\n{\n  if(mode==='dark')\n  {\n    setMode('light');\n    document.body.style.backgroundColor=\"white\"\n  }\n  else{\n    setMode('dark')\n    \n    document.body.style.backgroundColor=\"#202124\"\n  }\n} \n\n  return (\n  <>\n  \n    <Navbar Title=\"TextUtils\"  aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    \n    <div className=\"container  my-3\">\n    <TextForm  mode={mode} heading=\"Enter Your text to analyze\"/>\n        \n     {/* <Routes>\n      <Route path='/' element={ }></Route>\n      <Route path='/About' element={<About mode={mode}/>}/>\n     </Routes>\n       */}\n    \n    </div>\n    </>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}